---
layout: post
title: "python中列表作为函数参数传递的问题"
description: passing list as an argument of a function in python
categories: python
published: true
---


在Python中，list类型的变量作为函数参数传递时，是引用传递方式，也就是说如果在函数中修改了参数值，那么函数外面被传入的相应变量也会同步改变，例如定义如下的函数：

~~~python
def a(b):
    b[0]=1
~~~

测试效果如下：

~~~python
>>> c=[0]
>>> a(c)
>>> c
[1]
~~~

上面是一个一维列表的例子，二维列表也是一样， 定义如下函数

~~~python
def a(b):
    b[0][0]=1
~~~

测试效果如下：

~~~python
>>> c=[[0]]
>>> a(c)
>>> c
[[1]]
~~~

但是需要注意一点，如果是下面这种情况，函数外面被传入的变量值不会发生改变

~~~python
def a(b):
    b=[[0]]
~~~

测试效果如下：

~~~python
>>> c=[[1]]
>>> a(c)
>>> c
[[1]]
~~~

在这种情况下，函数内部并没有使用传入的列表引用，也就没有操作相应地址处的值；相当于重新定了一个变量，将这个新的变量命名为b，因此函数外面的变量c并没有发生变化

